// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Assistente_de_Instalação.Models;

public partial class vcContext : DbContext
{
    public vcContext(DbContextOptions<vcContext> options)
        : base(options)
    {
    }

    public virtual DbSet<VcCupfecha> VcCupfecha { get; set; }

    public virtual DbSet<VcMaquinas> VcMaquinas { get; set; }

    public virtual DbSet<VcProdutos> VcProdutos { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<VcCupfecha>(entity =>
        {
            entity.HasKey(e => e.IdCupom);

            entity.ToTable("VC_CUPFECHA", tb => tb.HasTrigger("TRG_CANCELA_ORDER_SHIPAY"));

            entity.HasIndex(e => e.Data, "IX_VC_CUPFECHA");

            entity.HasIndex(e => e.Tatual, "IX_VC_CUPFECHA_2");

            entity.HasIndex(e => e.Posicao, "IX_VC_CUPFECHA_3");

            entity.HasIndex(e => e.IdMaquina, "IX_VC_CUPFECHA_4");

            entity.HasIndex(e => e.Cancelado, "IX_VC_CUPFECHA_5");

            entity.HasIndex(e => e.Turno, "IX_VC_CUPFECHA_6");

            entity.HasIndex(e => e.IdOperador, "IX_VC_CUPFECHA_7");

            entity.HasIndex(e => e.IdCliente, "IX_VC_CUPFECHA_8");

            entity.HasIndex(e => e.Tipovenda, "IX_VC_CUPFECHA_9");

            entity.Property(e => e.IdCupom).HasColumnName("ID_CUPOM");
            entity.Property(e => e.AltRep)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.Atendido)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("atendido");
            entity.Property(e => e.Auditor)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('I')")
                .IsFixedLength()
                .HasColumnName("auditor");
            entity.Property(e => e.AutoDivideConta).HasColumnName("autoDivideConta");
            entity.Property(e => e.Bonificado)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("bonificado");
            entity.Property(e => e.CancSist)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("cancSist");
            entity.Property(e => e.Cancelado)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("CANCELADO");
            entity.Property(e => e.Ccf)
                .HasDefaultValueSql("(0)")
                .HasColumnName("ccf");
            entity.Property(e => e.ChaveCancNfce)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("chaveCancNfce");
            entity.Property(e => e.ChaveCancSat)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("chaveCancSat");
            entity.Property(e => e.ChaveDeAcesso)
                .HasMaxLength(44)
                .IsUnicode(false);
            entity.Property(e => e.CodIntegracao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("codIntegracao");
            entity.Property(e => e.Consumacao).HasColumnName("consumacao");
            entity.Property(e => e.Consumacaoserv).HasColumnName("consumacaoserv");
            entity.Property(e => e.Coo).HasColumnName("coo");
            entity.Property(e => e.Coocanc).HasColumnName("coocanc");
            entity.Property(e => e.Cpf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cpf");
            entity.Property(e => e.Cvale).HasColumnName("CVALE");
            entity.Property(e => e.Data)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("DATA");
            entity.Property(e => e.Desconto).HasColumnName("DESCONTO");
            entity.Property(e => e.Diarias).HasDefaultValueSql("(1)");
            entity.Property(e => e.DtEnvioCont)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvioCont");
            entity.Property(e => e.Dtemite)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("dtemite");
            entity.Property(e => e.Entrada).HasColumnName("entrada");
            entity.Property(e => e.Entradaserv).HasColumnName("entradaserv");
            entity.Property(e => e.Enviaint)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("enviaint");
            entity.Property(e => e.EviSent)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.HoraEntrega)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.HoraPedido)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.IdCliente).HasColumnName("ID_CLIENTE");
            entity.Property(e => e.IdClienteCn).HasColumnName("id_cliente_cn");
            entity.Property(e => e.IdEntregador).HasColumnName("ID_ENTREGADOR");
            entity.Property(e => e.IdGarcom).HasColumnName("ID_GARCOM");
            entity.Property(e => e.IdMaquina).HasColumnName("ID_MAQUINA");
            entity.Property(e => e.IdOperador).HasColumnName("ID_OPERADOR");
            entity.Property(e => e.IdPedidoIntegracao).HasColumnName("idPedidoIntegracao");
            entity.Property(e => e.IdReserva).HasColumnName("ID_RESERVA");
            entity.Property(e => e.IdVendedor).HasColumnName("ID_VENDEDOR");
            entity.Property(e => e.Ifnome)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("IFNome");
            entity.Property(e => e.Inutilizado)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')");
            entity.Property(e => e.Liberado)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .HasColumnName("liberado");
            entity.Property(e => e.LocalCanc).HasColumnName("localCanc");
            entity.Property(e => e.MotivoCanc)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.NomeCliente)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nomeCliente");
            entity.Property(e => e.Notaf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("NOTAF");
            entity.Property(e => e.NumNfce).HasColumnName("NumNFCE");
            entity.Property(e => e.NumNfcecanc).HasColumnName("NumNFCECanc");
            entity.Property(e => e.Pessoas)
                .HasDefaultValueSql("(1)")
                .HasColumnName("PESSOAS");
            entity.Property(e => e.PosIdent).HasColumnName("posIdent");
            entity.Property(e => e.Posicao).HasColumnName("POSICAO");
            entity.Property(e => e.Prodserv).HasColumnName("prodserv");
            entity.Property(e => e.ProtocoloAutorizacao)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Repique).HasColumnName("REPIQUE");
            entity.Property(e => e.Respago).HasColumnName("respago");
            entity.Property(e => e.Seq).HasColumnName("seq");
            entity.Property(e => e.Servico).HasColumnName("SERVICO");
            entity.Property(e => e.Tatual)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("TATUAL");
            entity.Property(e => e.Taxa).HasColumnName("TAXA");
            entity.Property(e => e.Tempo)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.TempoPedido)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.TipoIntegracao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tipoIntegracao");
            entity.Property(e => e.Tipovenda).HasColumnName("TIPOVENDA");
            entity.Property(e => e.TotComandas).HasColumnName("totComandas");
            entity.Property(e => e.Total).HasColumnName("TOTAL");
            entity.Property(e => e.Troco).HasColumnName("TROCO");
            entity.Property(e => e.Turno)
                .HasDefaultValueSql("(1)")
                .HasColumnName("TURNO");
            entity.Property(e => e.XmlCancNfce)
                .IsUnicode(false)
                .HasColumnName("xmlCancNfce");
            entity.Property(e => e.XmlCancSat)
                .IsUnicode(false)
                .HasColumnName("xmlCancSat");
            entity.Property(e => e.Xmlnfce)
                .IsUnicode(false)
                .HasColumnName("xmlnfce");
            entity.Property(e => e.Xmlsat)
                .IsUnicode(false)
                .HasColumnName("xmlsat");

            entity.HasOne(d => d.IdMaquinaNavigation).WithMany(p => p.VcCupfecha)
                .HasForeignKey(d => d.IdMaquina)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_VC_CUPFECHA_VC_MAQUINAS");
        });

        modelBuilder.Entity<VcMaquinas>(entity =>
        {
            entity.HasKey(e => e.IdMaquina);

            entity.ToTable("VC_MAQUINAS");

            entity.HasIndex(e => e.Nomecomp, "IX_VC_MAQUINAS");

            entity.HasIndex(e => e.Descricao, "IX_VC_MAQUINAS_1");

            entity.Property(e => e.IdMaquina).HasColumnName("ID_MAQUINA");
            entity.Property(e => e.Abrecup)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("ABRECUP");
            entity.Property(e => e.AmbienteNfce).HasColumnName("AmbienteNFCe");
            entity.Property(e => e.ApiSat)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValueSql("('http://localhost:8080')")
                .HasColumnName("apiSAT");
            entity.Property(e => e.ApontaImpLocal)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("apontaImpLocal");
            entity.Property(e => e.Arqfilizola)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("ARQFILIZOLA");
            entity.Property(e => e.ArredondaEpson)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.AsgnSat)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.BalTororey).HasColumnName("balTororey");
            entity.Property(e => e.Balanca)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("BALANCA");
            entity.Property(e => e.Balancaquant)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("BALANCAQUANT");
            entity.Property(e => e.Bemarest)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("BEMAREST");
            entity.Property(e => e.Bematerm)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("bematerm");
            entity.Property(e => e.Bloqsangria)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("BLOQSANGRIA");
            entity.Property(e => e.BloqueiaBalcao).HasColumnName("bloqueiaBalcao");
            entity.Property(e => e.Caminhodonuz)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("caminhodonuz");
            entity.Property(e => e.Chave)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CHAVE");
            entity.Property(e => e.CnpjMaquinas)
                .IsRequired()
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasDefaultValueSql("('00000000000000')")
                .HasColumnName("cnpjMaquinas");
            entity.Property(e => e.CnpjVirtual)
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.CodSat)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Combalan)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("(1)")
                .IsFixedLength()
                .HasColumnName("COMBALAN");
            entity.Property(e => e.Confbalan)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValueSql("(2400)")
                .IsFixedLength()
                .HasColumnName("CONFBALAN");
            entity.Property(e => e.ConfigRipa)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')");
            entity.Property(e => e.CupomDupliVanucci)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cupomDupliVanucci");
            entity.Property(e => e.CupomErroVanucci)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cupomErroVanucci");
            entity.Property(e => e.CupomVanucci)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cupomVanucci");
            entity.Property(e => e.Daruma)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("DARUMA");
            entity.Property(e => e.Darumakg)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("darumakg");
            entity.Property(e => e.DataCad)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Descricao)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("DESCRICAO");
            entity.Property(e => e.DigitoVerificadorRipa)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.Dircup)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValueSql("('C:\\ViCommerce\\Cupons\\')")
                .IsFixedLength()
                .HasColumnName("DIRCUP");
            entity.Property(e => e.Displa)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("DISPLA");
            entity.Property(e => e.Donuzauto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("donuzauto");
            entity.Property(e => e.DtRedz)
                .HasColumnType("datetime")
                .HasColumnName("DT_REDZ");
            entity.Property(e => e.DuasViasPreConta)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.DuasViasPreContaEntrega)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.Elotech)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("ELOTECH");
            entity.Property(e => e.EnviaTrocaInt)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.ExpIfood)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("expIfood");
            entity.Property(e => e.Fator)
                .HasDefaultValueSql("(1)")
                .HasColumnName("FATOR");
            entity.Property(e => e.Fechaimp)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("FECHAIMP");
            entity.Property(e => e.Frelacionado).HasColumnName("frelacionado");
            entity.Property(e => e.Gaveta)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("GAVETA");
            entity.Property(e => e.Gertec)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("GERTEC");
            entity.Property(e => e.GuilhotinaIf)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("GuilhotinaIF");
            entity.Property(e => e.IdHostImpLocal).HasColumnName("idHostImpLocal");
            entity.Property(e => e.Iemaquinas)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasDefaultValueSql("('000000000000000')")
                .HasColumnName("IEMaquinas");
            entity.Property(e => e.ImpPedidoNoSat)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("impPedidoNoSAT");
            entity.Property(e => e.ImpRecIcms)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')");
            entity.Property(e => e.Impnf)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasDefaultValueSql("('\\\\Servidor\\NomeImpressora')")
                .HasColumnName("impnf");
            entity.Property(e => e.Impprod)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("IMPPROD");
            entity.Property(e => e.InverteCmdGaveta)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("inverteCmdGaveta");
            entity.Property(e => e.KgAutoTerminal).HasColumnName("kgAutoTerminal");
            entity.Property(e => e.Kgauto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("KGAUTO");
            entity.Property(e => e.Kgautosob)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("KGAUTOSOB");
            entity.Property(e => e.LayoutSat)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasDefaultValueSql("('07')")
                .IsFixedLength();
            entity.Property(e => e.LoteNfce).HasColumnName("loteNFCe");
            entity.Property(e => e.Mf)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("MF");
            entity.Property(e => e.Microimp)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("MICROIMP");
            entity.Property(e => e.Micronum)
                .HasDefaultValueSql("(1)")
                .HasColumnName("MICRONUM");
            entity.Property(e => e.Microporta)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValueSql("('COM1')")
                .IsFixedLength()
                .HasColumnName("MICROPORTA");
            entity.Property(e => e.Microterm)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("MICROTERM");
            entity.Property(e => e.Microterm1)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("MICROTERM1");
            entity.Property(e => e.Microvelo)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasDefaultValueSql("(115200)")
                .HasColumnName("MICROVELO");
            entity.Property(e => e.Mtpasso)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("MTPASSO");
            entity.Property(e => e.NImpRemo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("nImpRemo");
            entity.Property(e => e.NSerieNfce)
                .HasDefaultValueSql("((1))")
                .HasColumnName("nSerieNfce");
            entity.Property(e => e.Ncupons).HasDefaultValueSql("(1)");
            entity.Property(e => e.NegritaSat)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("negritaSat");
            entity.Property(e => e.Nfcecon).HasColumnName("nfcecon");
            entity.Property(e => e.Nlinhas).HasColumnName("NLINHAS");
            entity.Property(e => e.NomeDllsat)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nomeDLLSat");
            entity.Property(e => e.Nomecomp)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("NOMECOMP");
            entity.Property(e => e.Notahot)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasDefaultValueSql("('LPT1')")
                .IsFixedLength()
                .HasColumnName("notahot");
            entity.Property(e => e.Novabalan)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("novabalan");
            entity.Property(e => e.NumCaixa)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NumNfce).HasColumnName("numNFCe");
            entity.Property(e => e.Numtermtouch).HasColumnName("numtermtouch");
            entity.Property(e => e.Olivetti)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("OLIVETTI");
            entity.Property(e => e.PathArm)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PathImp)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Pbruto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("pbruto");
            entity.Property(e => e.PortaGestorDePedidos).HasDefaultValueSql("((8000))");
            entity.Property(e => e.Portacom)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValueSql("('COM2')")
                .IsFixedLength()
                .HasColumnName("PORTACOM");
            entity.Property(e => e.Posicod)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("POSICOD");
            entity.Property(e => e.Prefisc)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("prefisc");
            entity.Property(e => e.Prodigital)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("PRODIGITAL");
            entity.Property(e => e.Repauto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("REPAUTO");
            entity.Property(e => e.RestIntFin).HasColumnName("restIntFin");
            entity.Property(e => e.RestIntIni).HasColumnName("restIntIni");
            entity.Property(e => e.Rf)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("RF");
            entity.Property(e => e.Shellbi)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("SHELLBI");
            entity.Property(e => e.ShipayClientId)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("shipayClientID");
            entity.Property(e => e.ShipayImprimirQrCode).HasColumnName("shipayImprimirQrCode");
            entity.Property(e => e.ShipayPermiteConsulta).HasColumnName("shipayPermiteConsulta");
            entity.Property(e => e.ShipayPosDesc)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("shipayPosDesc");
            entity.Property(e => e.ShipayTerminalStatus).HasColumnName("shipayTerminalStatus");
            entity.Property(e => e.Sisbalauto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("sisbalauto");
            entity.Property(e => e.Sispalm)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("SISPALM");
            entity.Property(e => e.SomenteViasEntrega)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("somenteViasEntrega");
            entity.Property(e => e.Stermica)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("stermica");
            entity.Property(e => e.Subposicao)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("SUBPOSICAO");
            entity.Property(e => e.Tela)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.TermAbertComandas).HasColumnName("termAbertComandas");
            entity.Property(e => e.Terminal)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("TERMINAL");
            entity.Property(e => e.Tipoimp)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasDefaultValueSql("(0)")
                .IsFixedLength()
                .HasColumnName("TIPOIMP");
            entity.Property(e => e.Tipopasso)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('1')")
                .IsFixedLength()
                .HasColumnName("TIPOPASSO");
            entity.Property(e => e.Tiposweda)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("TIPOSWEDA");
            entity.Property(e => e.Toledo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("TOLEDO");
            entity.Property(e => e.TouchPadrao).HasColumnName("touchPadrao");
            entity.Property(e => e.TurnoSemPos)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.UranoUdcPop)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.UrlIntegradorDePedidos)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasDefaultValueSql("('http://localhost:8001/')");
            entity.Property(e => e.UsaRestPosInte).HasColumnName("usaRestPosInte");
            entity.Property(e => e.UsaVanucci)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')");
            entity.Property(e => e.Usaatalho)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("USAATALHO");
            entity.Property(e => e.UsarDadosMaquinaSat)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("usarDadosMaquinaSAT");
            entity.Property(e => e.Velocidade)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasDefaultValueSql("('9600')")
                .HasColumnName("velocidade");
            entity.Property(e => e.Vertef)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("vertef");
            entity.Property(e => e.Viasent)
                .HasDefaultValueSql("(1)")
                .HasColumnName("viasent");
            entity.Property(e => e.Willtech)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("WILLTECH");
        });

        modelBuilder.Entity<VcProdutos>(entity =>
        {
            entity.HasKey(e => e.IdProduto);

            entity.ToTable("VC_PRODUTOS", tb => tb.HasTrigger("ATUALIZA_MOBILE_PRODUTOS2"));

            entity.HasIndex(e => new { e.IdSubgrupo, e.Produto }, "IX_VC_PRODUTOS").IsUnique();

            entity.HasIndex(e => e.IdUnidade, "IX_VC_PRODUTOS_1");

            entity.HasIndex(e => e.IdInternet, "IX_VC_PRODUTOS_12");

            entity.HasIndex(e => e.IdSubgrupo, "IX_VC_PRODUTOS_2");

            entity.HasIndex(e => e.Cproduto, "IX_VC_PRODUTOS_3").IsUnique();

            entity.Property(e => e.IdProduto).HasColumnName("ID_PRODUTO");
            entity.Property(e => e.Aceitadec)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("ACEITADEC");
            entity.Property(e => e.Alicota)
                .HasMaxLength(13)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ALICOTA");
            entity.Property(e => e.Alicred).HasColumnName("alicred");
            entity.Property(e => e.Aliquotacofins).HasColumnName("aliquotacofins");
            entity.Property(e => e.Aliquotacofinsst).HasColumnName("aliquotacofinsst");
            entity.Property(e => e.Aliquotapis).HasColumnName("aliquotapis");
            entity.Property(e => e.Aliquotapisst).HasColumnName("aliquotapisst");
            entity.Property(e => e.AlteradoPor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("alteradoPor");
            entity.Property(e => e.Atalho)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ATALHO");
            entity.Property(e => e.Automatico)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("automatico");
            entity.Property(e => e.Balanca)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("BALANCA");
            entity.Property(e => e.Bcop).HasColumnName("bcop");
            entity.Property(e => e.CBenef)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cBenef");
            entity.Property(e => e.CadastradoPor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cadastradoPor");
            entity.Property(e => e.CalculaProdPorTempo).HasColumnName("calculaProdPorTempo");
            entity.Property(e => e.Capncm)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('00 - Selecionar')")
                .HasColumnName("capncm");
            entity.Property(e => e.Cbarra)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("CBARRA");
            entity.Property(e => e.Cest)
                .HasMaxLength(7)
                .IsUnicode(false)
                .HasDefaultValueSql("('0000000')")
                .HasColumnName("cest");
            entity.Property(e => e.Cfop)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValueSql("('0')")
                .HasColumnName("CFOP");
            entity.Property(e => e.CobraCatraca)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')");
            entity.Property(e => e.Combo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("combo");
            entity.Property(e => e.Comissao).HasColumnName("comissao");
            entity.Property(e => e.Compoe)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("COMPOE");
            entity.Property(e => e.Composto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("composto");
            entity.Property(e => e.Cproduto)
                .IsRequired()
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("CPRODUTO");
            entity.Property(e => e.CstCofins)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cst_cofins");
            entity.Property(e => e.CstIcms)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cst_icms");
            entity.Property(e => e.CstPis)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("cst_pis");
            entity.Property(e => e.Datafin)
                .HasColumnType("datetime")
                .HasColumnName("DATAFIN");
            entity.Property(e => e.Dataini)
                .HasColumnType("datetime")
                .HasColumnName("DATAINI");
            entity.Property(e => e.Divide)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasDefaultValueSql("(1)")
                .HasColumnName("DIVIDE");
            entity.Property(e => e.Eminimo).HasColumnName("EMINIMO");
            entity.Property(e => e.EnviaMensagem)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.Estoue)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("ESTOUE");
            entity.Property(e => e.Ex).HasColumnName("ex");
            entity.Property(e => e.ExternalCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("externalCode");
            entity.Property(e => e.Extra)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("extra");
            entity.Property(e => e.Fabricacao)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('T')")
                .IsFixedLength()
                .HasColumnName("fabricacao");
            entity.Property(e => e.FlCombinarPromo).HasColumnName("fl_combinarPromo");
            entity.Property(e => e.FlHoraIniHoraFin).HasColumnName("fl_HoraIniHoraFin");
            entity.Property(e => e.FlManterQtd).HasColumnName("flManterQtd");
            entity.Property(e => e.FlMultiplaVlFixo).HasColumnName("flMultiplaVlFixo");
            entity.Property(e => e.FlPromoData).HasColumnName("fl_promoData");
            entity.Property(e => e.FlPromoDiaSemana).HasColumnName("fl_promoDiaSemana");
            entity.Property(e => e.FlPromoHora).HasColumnName("fl_promoHora");
            entity.Property(e => e.FlPromoSemana).HasColumnName("fl_promoSemana");
            entity.Property(e => e.Foto)
                .HasColumnType("image")
                .HasColumnName("foto");
            entity.Property(e => e.Horaf)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasDefaultValueSql("('00:00')")
                .HasColumnName("horaf");
            entity.Property(e => e.Horai)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasDefaultValueSql("('00:00')")
                .HasColumnName("horai");
            entity.Property(e => e.Iat)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('T')")
                .HasColumnName("iat");
            entity.Property(e => e.Icms).HasColumnName("icms");
            entity.Property(e => e.Icmsst).HasColumnName("icmsst");
            entity.Property(e => e.Icone)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("icone");
            entity.Property(e => e.IdInternet).HasColumnName("id_internet");
            entity.Property(e => e.IdProdint).HasColumnName("id_prodint");
            entity.Property(e => e.IdReceita).HasColumnName("id_receita");
            entity.Property(e => e.IdSubgrupo).HasColumnName("ID_SUBGRUPO");
            entity.Property(e => e.IdUnidade).HasColumnName("ID_UNIDADE");
            entity.Property(e => e.IgnoraTouch)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("ignora_touch");
            entity.Property(e => e.ImpEtiqueta)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')");
            entity.Property(e => e.IsAcomp)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("isAcomp");
            entity.Property(e => e.IsCadAuto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("isCadAuto");
            entity.Property(e => e.IsComboMontagem).HasColumnName("isComboMontagem");
            entity.Property(e => e.IsPizza).HasColumnName("isPizza");
            entity.Property(e => e.IsPizzaMontagem).HasColumnName("isPizzaMontagem");
            entity.Property(e => e.Iva).HasColumnName("iva");
            entity.Property(e => e.Maior)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("MAIOR");
            entity.Property(e => e.Manual)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("manual");
            entity.Property(e => e.Margem).HasColumnName("margem");
            entity.Property(e => e.Margemaddst).HasColumnName("margemaddst");
            entity.Property(e => e.Modbc)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('000 - Selecionar')")
                .HasColumnName("modbc");
            entity.Property(e => e.Modbcst)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('000 - Selecionar')")
                .HasColumnName("modbcst");
            entity.Property(e => e.MotDesIcms)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("motDesICMS");
            entity.Property(e => e.Motdes)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('000 - Selecionar')")
                .HasColumnName("motdes");
            entity.Property(e => e.Ncm)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("ncm");
            entity.Property(e => e.Obrigaposicao)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("obrigaposicao");
            entity.Property(e => e.Observacao)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("observacao");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("observacoes");
            entity.Property(e => e.Origem)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('000 - Selecionar')")
                .HasColumnName("origem");
            entity.Property(e => e.PMvast)
                .HasDefaultValueSql("((0.00))")
                .HasColumnName("pMVAST");
            entity.Property(e => e.Percent1).HasColumnName("PERCENT1");
            entity.Property(e => e.Percent2).HasColumnName("PERCENT2");
            entity.Property(e => e.PermiteTab)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .HasColumnName("permiteTab");
            entity.Property(e => e.Pizza)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("pizza");
            entity.Property(e => e.Preco2).HasColumnName("PRECO2");
            entity.Property(e => e.Preco3).HasColumnName("PRECO3");
            entity.Property(e => e.Preco4).HasColumnName("PRECO4");
            entity.Property(e => e.PrecoDiaSemana)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precoDiaSemana");
            entity.Property(e => e.PrecoPromo)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precoPromo");
            entity.Property(e => e.ProdAutoCatraca)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')");
            entity.Property(e => e.ProdComoServico).HasColumnName("prodComoServico");
            entity.Property(e => e.ProdPromo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("prodPromo");
            entity.Property(e => e.ProdRodizio).HasColumnName("prodRodizio");
            entity.Property(e => e.Prodauto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("PRODAUTO");
            entity.Property(e => e.Prodsob)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("PRODSOB");
            entity.Property(e => e.Produto)
                .IsRequired()
                .HasMaxLength(160)
                .IsUnicode(false)
                .HasColumnName("PRODUTO");
            entity.Property(e => e.PromoDom).HasColumnName("promoDom");
            entity.Property(e => e.PromoQua).HasColumnName("promoQua");
            entity.Property(e => e.PromoQui).HasColumnName("promoQui");
            entity.Property(e => e.PromoSab).HasColumnName("promoSab");
            entity.Property(e => e.PromoSeg).HasColumnName("promoSeg");
            entity.Property(e => e.PromoSex).HasColumnName("promoSex");
            entity.Property(e => e.PromoTer).HasColumnName("promoTer");
            entity.Property(e => e.Pvenda).HasColumnName("PVENDA");
            entity.Property(e => e.QuantMax).HasDefaultValueSql("((0.00))");
            entity.Property(e => e.Redbc).HasColumnName("redbc");
            entity.Property(e => e.Redbcst).HasColumnName("redbcst");
            entity.Property(e => e.Saliq)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValueSql("('F')")
                .HasColumnName("SALIQ");
            entity.Property(e => e.Saliqicms)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValueSql("(0)")
                .HasColumnName("SALIQICMS");
            entity.Property(e => e.Saliqipi)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValueSql("(0)")
                .HasColumnName("SALIQIPI");
            entity.Property(e => e.Scodncm)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasDefaultValueSql("(0)")
                .HasColumnName("SCODNCM");
            entity.Property(e => e.Selecionado)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("selecionado");
            entity.Property(e => e.Semanaf)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('1')")
                .IsFixedLength()
                .HasColumnName("SEMANAF");
            entity.Property(e => e.Semanai)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('1')")
                .IsFixedLength()
                .HasColumnName("SEMANAI");
            entity.Property(e => e.Servico)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("SERVICO");
            entity.Property(e => e.ServicoAirSoft)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("servicoAirSoft");
            entity.Property(e => e.Sreducalc)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValueSql("(0)")
                .HasColumnName("SREDUCALC");
            entity.Property(e => e.Ssittrib)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasDefaultValueSql("(0)")
                .HasColumnName("SSITTRIB");
            entity.Property(e => e.Ssubtrib)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasDefaultValueSql("(0)")
                .HasColumnName("SSUBTRIB");
            entity.Property(e => e.Ticket)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("TICKET");
            entity.Property(e => e.Tipocalccofins)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('000 - Selecionar')")
                .HasColumnName("tipocalccofins");
            entity.Property(e => e.Tipocalccofinsst)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('000 - Selecionar')")
                .HasColumnName("tipocalccofinsst");
            entity.Property(e => e.Tipocalcpis)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('000 - Selecionar')")
                .HasColumnName("tipocalcpis");
            entity.Property(e => e.Tipocalcpisst)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('000 - Selecionar')")
                .HasColumnName("tipocalcpisst");
            entity.Property(e => e.Tipocofins)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('000 - Selecionar')")
                .HasColumnName("tipocofins");
            entity.Property(e => e.Tipopis)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('000 - Selecionar')")
                .HasColumnName("tipopis");
            entity.Property(e => e.Tribicms)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('000 - Selecionar')")
                .HasColumnName("tribicms");
            entity.Property(e => e.Ufst)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('000 - Selecionar')")
                .HasColumnName("ufst");
            entity.Property(e => e.VBcstret)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("vBCSTRet");
            entity.Property(e => e.VIcms)
                .HasDefaultValueSql("((0.00))")
                .HasColumnName("vICMS");
            entity.Property(e => e.VIcmsst)
                .HasDefaultValueSql("((0.00))")
                .HasColumnName("vICMSST");
            entity.Property(e => e.VIcmsstret)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("vICMSSTRet");
            entity.Property(e => e.VPis).HasColumnName("vPIS");
            entity.Property(e => e.ValCombo).HasColumnName("valCombo");
            entity.Property(e => e.ValFixo).HasDefaultValueSql("((0.00))");
            entity.Property(e => e.Valedias)
                .HasDefaultValueSql("(3)")
                .HasColumnName("VALEDIAS");
            entity.Property(e => e.ValorAbate)
                .HasDefaultValueSql("((0))")
                .HasColumnName("valorAbate");
            entity.Property(e => e.Venda)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("VENDA");
            entity.Property(e => e.Vminimo).HasColumnName("VMINIMO");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}