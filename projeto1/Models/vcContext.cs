// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Assistente_de_Instalação.Models;

public partial class vcContext : DbContext
{
    public vcContext()
    {
    }

    public vcContext(DbContextOptions<vcContext> options)
        : base(options)
    {
    }

    public virtual DbSet<VcMaquinas> VcMaquinas { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=(local);Initial Catalog=vc;Persist Security Info=True;User ID=sqlvirtualnet;Password=n14e5t20; TrustServerCertificate=true");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<VcMaquinas>(entity =>
        {
            entity.HasKey(e => e.IdMaquina);

            entity.ToTable("VC_MAQUINAS");

            entity.HasIndex(e => e.Nomecomp, "IX_VC_MAQUINAS");

            entity.HasIndex(e => e.Descricao, "IX_VC_MAQUINAS_1");

            entity.Property(e => e.IdMaquina).HasColumnName("ID_MAQUINA");
            entity.Property(e => e.Abrecup)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("ABRECUP");
            entity.Property(e => e.AmbienteNfce).HasColumnName("AmbienteNFCe");
            entity.Property(e => e.ApiSat)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValueSql("('http://localhost:8080')")
                .HasColumnName("apiSAT");
            entity.Property(e => e.ApontaImpLocal)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("apontaImpLocal");
            entity.Property(e => e.Arqfilizola)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("ARQFILIZOLA");
            entity.Property(e => e.ArredondaEpson)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.AsgnSat)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.BalTororey).HasColumnName("balTororey");
            entity.Property(e => e.Balanca)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("BALANCA");
            entity.Property(e => e.Balancaquant)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("BALANCAQUANT");
            entity.Property(e => e.Bemarest)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("BEMAREST");
            entity.Property(e => e.Bematerm)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("bematerm");
            entity.Property(e => e.Bloqsangria)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("BLOQSANGRIA");
            entity.Property(e => e.BloqueiaBalcao).HasColumnName("bloqueiaBalcao");
            entity.Property(e => e.Caminhodonuz)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("caminhodonuz");
            entity.Property(e => e.Chave)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CHAVE");
            entity.Property(e => e.CnpjMaquinas)
                .IsRequired()
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasDefaultValueSql("('00000000000000')")
                .HasColumnName("cnpjMaquinas");
            entity.Property(e => e.CnpjVirtual)
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.CodSat)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Combalan)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("(1)")
                .IsFixedLength()
                .HasColumnName("COMBALAN");
            entity.Property(e => e.Confbalan)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValueSql("(2400)")
                .IsFixedLength()
                .HasColumnName("CONFBALAN");
            entity.Property(e => e.ConfigRipa)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')");
            entity.Property(e => e.CupomDupliVanucci)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cupomDupliVanucci");
            entity.Property(e => e.CupomErroVanucci)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cupomErroVanucci");
            entity.Property(e => e.CupomVanucci)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cupomVanucci");
            entity.Property(e => e.Daruma)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("DARUMA");
            entity.Property(e => e.Darumakg)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("darumakg");
            entity.Property(e => e.DataCad)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Descricao)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("DESCRICAO");
            entity.Property(e => e.DigitoVerificadorRipa)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.Dircup)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValueSql("('C:\\ViCommerce\\Cupons\\')")
                .IsFixedLength()
                .HasColumnName("DIRCUP");
            entity.Property(e => e.Displa)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("DISPLA");
            entity.Property(e => e.Donuzauto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("donuzauto");
            entity.Property(e => e.DtRedz)
                .HasColumnType("datetime")
                .HasColumnName("DT_REDZ");
            entity.Property(e => e.DuasViasPreConta)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.DuasViasPreContaEntrega)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.Elotech)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("ELOTECH");
            entity.Property(e => e.EnviaTrocaInt)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.ExpIfood)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("expIfood");
            entity.Property(e => e.Fator)
                .HasDefaultValueSql("(1)")
                .HasColumnName("FATOR");
            entity.Property(e => e.Fechaimp)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("FECHAIMP");
            entity.Property(e => e.Frelacionado).HasColumnName("frelacionado");
            entity.Property(e => e.Gaveta)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("GAVETA");
            entity.Property(e => e.Gertec)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("GERTEC");
            entity.Property(e => e.GuilhotinaIf)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("GuilhotinaIF");
            entity.Property(e => e.IdHostImpLocal).HasColumnName("idHostImpLocal");
            entity.Property(e => e.Iemaquinas)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasDefaultValueSql("('000000000000000')")
                .HasColumnName("IEMaquinas");
            entity.Property(e => e.ImpPedidoNoSat)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("impPedidoNoSAT");
            entity.Property(e => e.ImpRecIcms)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')");
            entity.Property(e => e.Impnf)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasDefaultValueSql("('\\\\Servidor\\NomeImpressora')")
                .HasColumnName("impnf");
            entity.Property(e => e.Impprod)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("IMPPROD");
            entity.Property(e => e.InverteCmdGaveta)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("inverteCmdGaveta");
            entity.Property(e => e.KgAutoTerminal).HasColumnName("kgAutoTerminal");
            entity.Property(e => e.Kgauto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("KGAUTO");
            entity.Property(e => e.Kgautosob)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("KGAUTOSOB");
            entity.Property(e => e.LayoutSat)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasDefaultValueSql("('07')")
                .IsFixedLength();
            entity.Property(e => e.LoteNfce).HasColumnName("loteNFCe");
            entity.Property(e => e.Mf)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("MF");
            entity.Property(e => e.Microimp)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("MICROIMP");
            entity.Property(e => e.Micronum)
                .HasDefaultValueSql("(1)")
                .HasColumnName("MICRONUM");
            entity.Property(e => e.Microporta)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValueSql("('COM1')")
                .IsFixedLength()
                .HasColumnName("MICROPORTA");
            entity.Property(e => e.Microterm)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("MICROTERM");
            entity.Property(e => e.Microterm1)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("MICROTERM1");
            entity.Property(e => e.Microvelo)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasDefaultValueSql("(115200)")
                .HasColumnName("MICROVELO");
            entity.Property(e => e.Mtpasso)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("MTPASSO");
            entity.Property(e => e.NImpRemo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("nImpRemo");
            entity.Property(e => e.NSerieNfce)
                .HasDefaultValueSql("((1))")
                .HasColumnName("nSerieNfce");
            entity.Property(e => e.Ncupons).HasDefaultValueSql("(1)");
            entity.Property(e => e.NegritaSat)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("negritaSat");
            entity.Property(e => e.Nfcecon).HasColumnName("nfcecon");
            entity.Property(e => e.Nlinhas).HasColumnName("NLINHAS");
            entity.Property(e => e.NomeDllsat)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nomeDLLSat");
            entity.Property(e => e.Nomecomp)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("NOMECOMP");
            entity.Property(e => e.Notahot)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasDefaultValueSql("('LPT1')")
                .IsFixedLength()
                .HasColumnName("notahot");
            entity.Property(e => e.Novabalan)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("novabalan");
            entity.Property(e => e.NumCaixa)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NumNfce).HasColumnName("numNFCe");
            entity.Property(e => e.Numtermtouch).HasColumnName("numtermtouch");
            entity.Property(e => e.Olivetti)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("OLIVETTI");
            entity.Property(e => e.PathArm)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PathImp)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Pbruto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("pbruto");
            entity.Property(e => e.PortaGestorDePedidos).HasDefaultValueSql("((8000))");
            entity.Property(e => e.Portacom)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValueSql("('COM2')")
                .IsFixedLength()
                .HasColumnName("PORTACOM");
            entity.Property(e => e.Posicod)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("POSICOD");
            entity.Property(e => e.Prefisc)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("prefisc");
            entity.Property(e => e.Prodigital)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("PRODIGITAL");
            entity.Property(e => e.Repauto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("REPAUTO");
            entity.Property(e => e.RestIntFin).HasColumnName("restIntFin");
            entity.Property(e => e.RestIntIni).HasColumnName("restIntIni");
            entity.Property(e => e.Rf)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("RF");
            entity.Property(e => e.Shellbi)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("SHELLBI");
            entity.Property(e => e.ShipayClientId)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("shipayClientID");
            entity.Property(e => e.ShipayImprimirQrCode).HasColumnName("shipayImprimirQrCode");
            entity.Property(e => e.ShipayPermiteConsulta).HasColumnName("shipayPermiteConsulta");
            entity.Property(e => e.ShipayPosDesc)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("shipayPosDesc");
            entity.Property(e => e.ShipayTerminalStatus).HasColumnName("shipayTerminalStatus");
            entity.Property(e => e.Sisbalauto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("sisbalauto");
            entity.Property(e => e.Sispalm)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("SISPALM");
            entity.Property(e => e.SomenteViasEntrega)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('S')")
                .IsFixedLength()
                .HasColumnName("somenteViasEntrega");
            entity.Property(e => e.Stermica)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("stermica");
            entity.Property(e => e.Subposicao)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("SUBPOSICAO");
            entity.Property(e => e.Tela)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.TermAbertComandas).HasColumnName("termAbertComandas");
            entity.Property(e => e.Terminal)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("TERMINAL");
            entity.Property(e => e.Tipoimp)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasDefaultValueSql("(0)")
                .IsFixedLength()
                .HasColumnName("TIPOIMP");
            entity.Property(e => e.Tipopasso)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('1')")
                .IsFixedLength()
                .HasColumnName("TIPOPASSO");
            entity.Property(e => e.Tiposweda)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("TIPOSWEDA");
            entity.Property(e => e.Toledo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("TOLEDO");
            entity.Property(e => e.TouchPadrao).HasColumnName("touchPadrao");
            entity.Property(e => e.TurnoSemPos)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.UranoUdcPop)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();
            entity.Property(e => e.UrlIntegradorDePedidos)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasDefaultValueSql("('http://localhost:8001/')");
            entity.Property(e => e.UsaRestPosInte).HasColumnName("usaRestPosInte");
            entity.Property(e => e.UsaVanucci)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')");
            entity.Property(e => e.Usaatalho)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("USAATALHO");
            entity.Property(e => e.UsarDadosMaquinaSat)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("usarDadosMaquinaSAT");
            entity.Property(e => e.Velocidade)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasDefaultValueSql("('9600')")
                .HasColumnName("velocidade");
            entity.Property(e => e.Vertef)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("vertef");
            entity.Property(e => e.Viasent)
                .HasDefaultValueSql("(1)")
                .HasColumnName("viasent");
            entity.Property(e => e.Willtech)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength()
                .HasColumnName("WILLTECH");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}